#! ruby -Ku
# 動的計画法で解くパターン

# クラブに必要な面積と想定人数
clubs = [[11000, 40], [8000, 30], [400, 24], [800, 20], [900, 14], [1800, 16], [1000, 15], [7000, 40], [100, 10], [300, 12]]

N = 150

# 配列は以下の感じ
# 選んだクラブの組み合わせで必要な面積を計算する
#
# 初期状態 : 0 0 0 0 0 ...
# clubA    : 0 0 4 0 0 ...
# clubB    : 1 0 4 5 0 ...
area = Array.new(clubs.size + 1){Array.new(N + 1){0}}

# 計算は配列の下(数の大きい方)から埋めていく
# are[0]に最終的な人数が入る
(clubs.size - 1).downto(0){|i|
  (N + 1).times{|j|
    if j < clubs[i][1]
      # クラブ人数よりも少ないので、前回の人数をいれる
      area[i][j] = area[i + 1][j]
    else
      # クラブ人数を超えたので
      # 今の人数とそのクラブに入った場合の人数の大きい方を入れる
      area[i][j] = [area[i + 1][j],
                    area[i + 1][j - clubs[i][1]] + clubs[i][0]].max
    end
  }
}

puts area[0][N]

